name: Django Test

on:
  pull_request:
    branches:
      - dev

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: pgvector/pgvector:pg15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - uses: FedericoCarboni/setup-ffmpeg@v3
        with:
          github-token: ${{ github.server_url == 'https://github.com' && github.token || '' }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python -m nltk.downloader punkt

      - name: Run tests
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          GOOGLE_APPLICATION_CREDENTIALS: credentials/google-credentials.json
          GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}
          GOOGLE_CLIENT_SECRET_FILE: credentials/client_secret.json
          GOOGLE_CLIENT_SECRET_JSON: ${{ secrets.GOOGLE_CLIENT_SECRET_JSON }}
          ALLOWED_HOSTS: "*"
          MASTER_DB_USERNAME: postgres
          MASTER_DB_PASSWORD: postgres
          MASTER_DB_NAME: postgres
          MASTER_DB_HOST: localhost
          MASTER_DB_PORT: 5432
          MIXPANEL_TOKEN: ${{ secrets.MIXPANEL_TOKEN }}
        run: |
          # To generate the content, do `cat google-credentials.json | base64`
          mkdir -p credentials
          echo $GOOGLE_APPLICATION_CREDENTIALS_JSON | base64 -d > $GOOGLE_APPLICATION_CREDENTIALS
          echo $GOOGLE_CLIENT_SECRET_JSON | base64 -d > $GOOGLE_CLIENT_SECRET_FILE
          python manage.py test --parallel 4 -v2
